//
// Created by Oleksandr Degtiar on 25.02.2021.
//

#ifndef ZD50_CONTROLLER_ATMEGA32U4_H
#define ZD50_CONTROLLER_ATMEGA32U4_H

#include <Arduino.h>
//  uncomment for enable LED for debugging
//#define LED_PIN PINB2

/* DEBUG LED */
#ifdef LED_PIN
#define LED_ENABLE() DDRB |= _BV(LED_PIN)
#define LED_OFF() PORTB |= _BV(LED_PIN)
#define LED_ON() PORTB &= ~(_BV(LED_PIN))
#define LED_TOGGLE2() PORTB ^= _BV(LED_PIN)
#define LED_TOGGLE() PINB |= _BV(PINB2)
#else
#define IR_PIN_RCV 1
#define IR_ENABLE() { DDRD &= ~(1 << (IR_PIN_RCV)); PORTD |= 1 << (IR_PIN_RCV); }
#define IR_EXTERNAL_ISR
#endif
/* *** */

/* EXPANSION IO */
//#define ZD50_GPIO1 3
//#define ZD50_GPIO2 4

/* SERIAL DEBUG PORT */
//#define ZD50_SOFT_SERIAL
#define ZD50_DEBUG_SERIAL
//#define SERIAL_DEBUG_BAUD_230400
//#define SERIAL_DEBUG_BAUD_115200
//#define SERIAL_DEBUG_BAUD_38400
#define DEBUG_PIN_TX ZD50_GPIO1
#define DEBUG_PIN_RX ZD50_GPIO2

#ifdef ZD50_SOFT_SERIAL
    #include "SerialOut.h"
    #define SERIAL_OUT_T TinySerialOut
    #define SERIAL_OUT_REF SerialOut

    #else

    #define SERIAL_OUT_T Serial_
    #define SERIAL_OUT_REF Serial
#endif

#define ZD50_DEBUG_COMMANDS
#define ZD50_DEBUG_MENU

/* I2C DISPLAY */
#define I2C_DDR   DDRD
#define I2C_SCK   _BV(1)
#define I2C_SDA   _BV(0)

#define I2C_SDA_LO    I2C_DDR |= I2C_SDA
#define I2C_SCK_LO    I2C_DDR |= I2C_SCK
#define I2C_SDA_HI    I2C_DDR &= ~(I2C_SDA)
#define I2C_SCK_HI    I2C_DDR &= ~(I2C_SCK)
#define I2C_WAIT      _delay_us(4)

/* BACKLIGHT */
#define BACKLIGHT_PIN_MASK _BV(6)
#define BACKLIGHT_PORT PORTD

#define BACKLIGHT_MAX_LIGHTNESS (60)

/* PUSH BUTTON */
//#define BUTTON_PIN 4
#define BUTTON_BIT _BV(4)
#define BUTTON_PRESS_STATE() (PIND & BUTTON_BIT ? false : true)
#define BUTTON_INIT_PORT() DDRD &= ~(BUTTON_BIT); PORTD |= BUTTON_BIT;

/* LUMINANCE SENSOR */
#define LUMINANCE_PIN_SENSOR A3

/* ROTARY ENCODER */
#define ROTARY_DDR DDRD
#define ROTARY_PORT PORTD
#define ROTARY_PORTIN PIND
#define ROTARY_PIN_A_BIT _BV(3)
#define ROTARY_PIN_B_BIT _BV(2)

/* ATTENUATOR */
#define ATTENUATOR_PIN_CS_L (1 << 4)
#define ATTENUATOR_PIN_CS_R (1 << 5)
#define ATTENUATOR_PIN_DATA (1 << 6)
#define ATTENUATOR_PIN_CLK (1 << 7)
#define ATTENUATOR_IO_PORT PORTC
#define ATTENUATOR_IO_MASK (ATTENUATOR_PIN_CS_L | ATTENUATOR_PIN_CS_R | ATTENUATOR_PIN_DATA | ATTENUATOR_PIN_CLK)

#define ATTENUATOR_IO_INIT() ( DDRC |= ATTENUATOR_IO_MASK )
#define ATTENUATOR_IO_ALL_LO() ( ATTENUATOR_IO_PORT &= ~(ATTENUATOR_IO_MASK) )

#define ATTENUATOR_IO_CS_LO() ( ATTENUATOR_IO_PORT &= ~(ATTENUATOR_PIN_CS_L | ATTENUATOR_PIN_CS_R) )
#define ATTENUATOR_IO_CS_HI() ( ATTENUATOR_IO_PORT |= (ATTENUATOR_PIN_CS_L | ATTENUATOR_PIN_CS_R) )

#define ATTENUATOR_IO_DO_LO() ( ATTENUATOR_IO_PORT &= ~(ATTENUATOR_PIN_DATA) )
#define ATTENUATOR_IO_DO_HI() ( ATTENUATOR_IO_PORT |= (ATTENUATOR_PIN_DATA) )

#define ATTENUATOR_IO_CLK_LO() ( ATTENUATOR_IO_PORT &= ~(ATTENUATOR_PIN_CLK) )
#define ATTENUATOR_IO_CLK_HI() ( ATTENUATOR_IO_PORT |= (ATTENUATOR_PIN_CLK) )

/* POWER CONTROL */
#define PWR_PIN_SOFTSTART _BV(1)
#define PWR_PIN_ON _BV(2)
#define PWR_PIN_SOURCE_ON _BV(3)
#define PWR_PINS_MASK (PWR_PIN_SOFTSTART | PWR_PIN_ON | PWR_PIN_SOURCE_ON)
#define PWR_PORT PORTB
#define POWER_INIT() DDRB |= PWR_PINS_MASK

#endif //ZD50_CONTROLLER_ATMEGA32U4_H
